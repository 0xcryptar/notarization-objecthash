name: Build and deploy .NET Core application to Function App notarization-objecthash
on:
  push:
    branches:
    - 'master'
  workflow_dispatch:
  
env:
  AZURE_FUNCTIONAPP_NAME: notarization-objecthash
  AZURE_FUNCTIONAPP_PACKAGE_PATH: ObjectHashServer.API\.
  CONFIGURATION: Release
  DOTNET_VERSION: 8.0.x
  WORKING_DIRECTORY: ObjectHashServer.API
jobs:
  build-and-deploy:
    runs-on: windows-latest
    permissions:
      id-token: write #This is required for requesting the JWT

    steps:
    - uses: actions/checkout@master
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore
      run: dotnet restore "${{ env.WORKING_DIRECTORY }}"

    - name: Install SonarScanner
      run: dotnet tool install --global dotnet-sonarscanner

    - name: SonarQube Scan Begin
      run: >
        dotnet sonarscanner begin /k:"0xcryptar_notarization-objecthash_c0d56e29-f66f-4d92-8b23-ee3e0dfa97c9"
        /d:sonar.host.url="${{ secrets.SONARQUBE_HOST }}"
        /d:sonar.token="${{ secrets.SONARQUBE_TOKEN }}"
        /d:sonar.cs.vstest.reportsPaths="**/TestResults/*.trx"
        /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml"

    - name: Build
      run: dotnet build "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-restore

    - name: Run tests
      run: dotnet test --configuration Release --no-build --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./TestResults

    - name: SonarQube Scan End
      run: dotnet sonarscanner end /d:sonar.login="${{ secrets.SONARQUBE_TOKEN }}"

    - name: Login to Azure
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.NOTARIZATION_OBJECT_HASH_ID_CLIENT_ID }}
        tenant-id: ${{ secrets.NOTARIZATION_OBJECT_HASH_ID_TENANT_ID }}
        subscription-id: ${{ secrets.NOTARIZATION_OBJECT_HASH_ID_SUBSCRIPTION_ID }}

    - name: Publish
      run: dotnet publish "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-build --output "${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}"
    - name: Deploy to Azure Function App
      uses: Azure/functions-action@v1
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
